//app.js


app.put('/employees/:id', (req, res) => {
  const { id } = req.params;
  const { name, designation, salary, department } = req.body;

  const sql = 'UPDATE employees SET name = ?, designation = ?, salary = ?, department = ? WHERE id = ?';
  db.query(sql, [name, designation, salary, department, id], (err) => {
    if (err) throw err;
    res.json({ message: 'Employee updated successfully' });
  });
});




//index.html


<!-- Similar to Add Employee, add fields to specify `id` for updating. -->


<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add Employee</title>
</head>
<body>
  <form id="employeeForm">
    <label>
      Name:
      <input type="text" id="name" required />
    </label>
    <label>
      Designation:
      <input type="text" id="designation" required />
    </label>
    <label>
      Salary:
      <input type="number" id="salary" required />
    </label>
    <label>
      Department:
      <input type="text" id="department" required />
    </label>
    <button type="submit">Add Employee</button>
  </form>
  <script>
    document.getElementById('employeeForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const response = await fetch('http://localhost:3000/employees', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          name: document.getElementById('name').value,
          designation: document.getElementById('designation').value,
          salary: document.getElementById('salary').value,
          department: document.getElementById('department').value,
        }),
      });
      const result = await response.json();
      alert(result.message || result.error);
    });
  </script>
</body>
</html>
